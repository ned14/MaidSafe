# Remember that this blacklist file is GLOBAL to all sanitizers
# Be therefore extremely careful when considering to add a sanitizer
# filter here instead of using a runtime suppression
#
# Remember also that filters here quite literally completely
# remove instrumentation altogether, so filtering here means
# that sanitizers such as tsan will false positive on problems
# introduced by code filtered here.
#
# The main use for this file is ubsan, as it's the only sanitizer
# without a runtime suppression facility.
#
# Be ESPECIALLY careful when filtering out entire source files!
# Try if at all possible to filter only functions using fun:regex
# Remember you must use mangled symbol names with fun:regex


#### Compile time filters for ubsan ####

## The well known ubsan failure in libstdc++ extant for years :)

# Line 96:24: runtime error: load of value 4294967221, which is not a valid value for type 'std::_Ios_Fmtflags'
fun:*_Ios_Fmtflags*


## Cryptopp likes to use unaligned reads and writes for speed. Safe on Intel.

# Line 392:2: runtime error: load of misaligned address 0x000004084291 for type 'word32' (aka 'unsigned int'), which requires 4 byte alignment
src:*/src/third_party_libs/cryptopp/rijndael.cpp
# Line 938:3: runtime error: store to misaligned address 0x0000043b0985 for type 'unsigned int', which requires 4 byte alignment
src:*/src/third_party_libs/cryptopp/misc.h
# Line 26:5: runtime error: store to misaligned address 0x0000043b0985 for type 'word64' (aka 'unsigned long long'), which requires 8 byte alignment
src:*/src/third_party_libs/cryptopp/misc.cpp
# Line 134:10: runtime error: load of misaligned address 0x7fec4c70c00f for type 'const word32' (aka 'const unsigned int'), which requires 4 byte alignment
src:*/src/third_party_libs/cryptopp/crc.cpp


# CATCH has some issues too.
# Line 29:20: runtime error: reference binding to null pointer of type 'Catch::IRunner'
src:*/src/catch/include/internal/catch_context_impl.hpp


# boost/any.hpp:259:16: runtime error: downcast of address 0x000004392e70 which does not point to an object of type 'any::holder<int>'
fun:*any_cast*

# boost/lexical_cast.hpp:1625:43: runtime error: downcast of address 0x7fbb4fffbce8 which does not point to an object of type 'buffer_t' (aka 'parser_buf<std::basic_streambuf<char, char_traits<char> >, char>')
fun:*shl_input_streamable*

# This hack is to silence what are lickly to be valid errors in boost::process and intrusive ptr libs
# They shoudl be considered short term and either properly fixed or drop boost process.
fun:*pointer_to*
fun:*priv_static_cast_from*
fun:*tree_iterator*
fun:*get_min_size*

#### Compile time filters for asan ####


#### Compile time filters for msan ####


#### Compile time filters for tsan ####

